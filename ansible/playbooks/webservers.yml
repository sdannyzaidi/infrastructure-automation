---
# Web servers configuration playbook
# Installs and configures web servers with Docker and application deployment

- name: Configure web servers
  hosts: webservers
  become: yes
  gather_facts: yes
  
  vars:
    docker_compose_version: "2.21.0"
    app_directory: "/opt/infrastructure-app"
    
  tasks:
    - name: Install Docker dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add appuser to docker group
      user:
        name: appuser
        groups: docker
        append: yes

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-Linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create application directory
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: appuser
        group: appuser
        mode: '0755'

    - name: Copy application files
      copy:
        src: "{{ item.src }}"
        dest: "{{ app_directory }}/{{ item.dest }}"
        owner: appuser
        group: appuser
        mode: '0644'
      loop:
        - { src: "../../apps/web-app/app.py", dest: "app.py" }
        - { src: "../../apps/web-app/requirements.txt", dest: "requirements.txt" }
        - { src: "../../docker/Dockerfile", dest: "Dockerfile" }
        - { src: "../../docker/docker-compose.yml", dest: "docker-compose.yml" }

    - name: Build application Docker image
      docker_image:
        build:
          path: "{{ app_directory }}"
        name: infrastructure-learning-app
        tag: latest
        source: build
      become_user: appuser

    - name: Start application with Docker Compose
      docker_compose:
        project_src: "{{ app_directory }}"
        state: present
      become_user: appuser

    - name: Configure firewall for web traffic
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "80"
        - "443"
        - "4000"

    - name: Enable firewall
      ufw:
        state: enabled
        policy: deny
        direction: incoming
